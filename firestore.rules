rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /solutionRequests/{solutionRequestId} {
      allow create: if (
        request.auth != null &&
        request.resource.data.keys().hasOnly(
          [
            'summary',
            'details',
            'numberOfRequesters',
            'summaryAndDetailsWords'
          ]
        ) &&
        request.resource.data.summary is string &&
        request.resource.data.details is string &&
        request.resource.data.numberOfRequesters is int &&
        request.resource.data.summaryAndDetailsWords is list &&
        request.resource.data.summary.size() <= 400 &&
        request.resource.data.details.size() <= 700
      );
      allow read: if true;
      allow update: if (
        request.auth != null &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(
          [
            'numberOfRequesters'
          ]
        ) &&
        request.resource.data.numberOfRequesters is int &&
        request.resource.data.numberOfRequesters == resource.data.numberOfRequesters + 1
      );
      allow delete: if false;
    }

    match /solutionRequests/{solutionRequestId}/solutionProposals/{solutionProposalId} {
      allow create: if (
        request.auth != null &&
        request.resource.data.keys().hasOnly(
          [
            'solution'
          ]
        ) &&
        request.resource.data.solution is string
      );
      allow read: if true;
      allow update: if false;
      allow delete: if false;
    }

    match /users/{userId} {
      allow create, update: if (
        request.auth != null &&
        request.auth.uid == userId &&
        request.resource.data.keys().hasOnly(
          [
            'solutionRequests'
          ]
        )
      );
      allow read: if (
        request.auth != null &&
        request.auth.uid == userId
      );
      allow delete: if false;
    }
  }
}
